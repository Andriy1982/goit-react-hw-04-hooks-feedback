{"version":3,"sources":["Component/Section/SectionStyledComponent.js","Component/Section/Section.js","Component/Button/ButtonStyledComponent.js","Component/Button/Button.js","Component/FeedbackOption/FeedbackOptionStyledComponent.js","Component/FeedbackOption/FeedbackOption.js","Component/Notification/NotificationStyledComponent.js","Component/Notification/Notification.js","Component/Statistics/StatisticStyledComponent.js","Component/Statistics/Statistic.js","Component/App/App.js","index.js"],"names":["Container","styled","section","Title","h2","Section","title","children","ButtonFeedback","button","Button","name","callBack","type","onClick","ContainerButton","div","FeedbackOption","options","onButtonClick","good","neutral","bad","defaultProps","Description","p","Notification","message","List","ul","ListItem","li","Statistic","this","props","feedbackTotal","feedbackPercentage","Component","App","useState","setGood","setNeutral","setBad","TotalFeedback","PositiveFeedbackPercentage","Math","round","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mkBAEO,IAAMA,EAAYC,IAAOC,QAAV,KASTC,EAAQF,IAAOG,GAAV,KCMHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAQG,IACPC,M,0WCNA,IAAMC,EAAiBP,IAAOQ,OAAV,KCeZC,MAbf,YAAqC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACtB,OACE,cAACJ,EAAD,CAAgBG,KAAMA,EAAME,KAAK,SAASC,QAASF,EAAnD,SACGD,K,mPCLA,IAAMI,EAAkBd,IAAOe,IAAV,KAIEf,IAAOQ,OAAV,KCD3B,SAASQ,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAAiB,cACrBD,EADqB,GAC3CE,EAD2C,KACrCC,EADqC,KAC5BC,EAD4B,KAElD,OACE,eAACP,EAAD,WACE,cAAC,EAAD,CAAQJ,KAAMS,EAAMR,SAAUO,IAC9B,cAAC,EAAD,CAAQR,KAAMU,EAAST,SAAUO,IACjC,cAAC,EAAD,CAAQR,KAAMW,EAAKV,SAAUO,OAKnCF,EAAeM,aAAe,CAC5BL,QAAS,CAAC,OAAQ,UAAW,QAOhBD,Q,kJCtBR,IAAMO,EAAcvB,IAAOwB,EAAV,KCExB,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACH,EAAD,UAAcG,IAGvBD,EAAaH,aAAe,CAC1BI,QAAS,qBAOID,Q,sTCdR,IAAMvB,EAAQF,IAAOG,GAAV,KAGLwB,EAAO3B,IAAO4B,GAAV,KAGJC,EAAW7B,IAAO8B,GAAV,KCFAC,E,uKAST,IAAD,EAOHC,KAAKC,MALPC,EAFK,EAELA,cACAC,EAHK,EAGLA,mBACAhB,EAJK,EAILA,KACAE,EALK,EAKLA,IACAD,EANK,EAMLA,QAGF,OAAKc,EAGD,oCACE,cAAC,EAAD,yBACA,eAACP,EAAD,WACE,eAACE,EAAD,oBACQ,+BAAOV,OAEf,eAACU,EAAD,uBACW,+BAAOT,OAElB,eAACS,EAAD,mBACO,+BAAOR,OAEd,eAACQ,EAAD,qBACS,+BAAOK,OAEhB,eAACL,EAAD,iCACqB,iCAAOM,EAAP,iBAnBF,cAAC,EAAD,CAAcT,QAAQ,0B,GAlBdU,aCsCxBC,MAvCf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNnB,EADM,KACAoB,EADA,OAEiBD,mBAAS,GAF1B,mBAENlB,EAFM,KAEGoB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNjB,EAHM,KAGDoB,EAHC,KAoBPC,EAAgBvB,EAAOC,EAAUC,EACjCsB,EAA6BC,KAAKC,MAAc,IAAP1B,EAAcuB,GAC7D,OACE,eAAC,EAAD,CAASrC,MAAM,wBAAf,UACE,cAAC,EAAD,CACEY,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAtBoB,SAAA4B,GAExB,OADiBA,EAAMC,OAAfrC,MAEN,IAAK,OACH6B,GAAQ,SAAApB,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHqB,GAAW,SAAApB,GAAO,OAAIA,EAAU,KAChC,MACF,IAAK,MACHqB,GAAO,SAAApB,GAAG,OAAIA,EAAM,KACpB,MACF,QACE,WAWF,cAAC,EAAD,CACEa,cAAeQ,EACfP,mBAAoBQ,EACpBxB,KAAMA,EACNC,QAASA,EACTC,IAAKA,QClCb2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fad1f5b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n  max-width: 400px;\r\n  padding: 10px;\r\n  /* outline: 1px solid red; */\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0 0 20px 0;\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Title } from './SectionStyledComponent';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonFeedback = styled.button`\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  outline: none;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  border: none;\r\n  background: rgb(64, 199, 129);\r\n  box-shadow: 0 -3px rgb(53, 167, 110) inset;\r\n  cursor: pointer;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonFeedback } from './ButtonStyledComponent';\r\n\r\nfunction Button({ name, callBack }) {\r\n  return (\r\n    <ButtonFeedback name={name} type=\"button\" onClick={callBack}>\r\n      {name}\r\n    </ButtonFeedback>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  callBack: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const ContainerButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport const FeedbackButton = styled.button`\r\n  &:not(::last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button';\r\nimport { ContainerButton } from './FeedbackOptionStyledComponent';\r\n\r\nfunction FeedbackOption({ options, onButtonClick }) {\r\n  const [good, neutral, bad] = options;\r\n  return (\r\n    <ContainerButton>\r\n      <Button name={good} callBack={onButtonClick} />\r\n      <Button name={neutral} callBack={onButtonClick} />\r\n      <Button name={bad} callBack={onButtonClick} />\r\n    </ContainerButton>\r\n  );\r\n}\r\n\r\nFeedbackOption.defaultProps = {\r\n  options: ['good', 'neutral', 'bad'],\r\n};\r\nFeedbackOption.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOption;\r\n","import styled from 'styled-components';\r\n\r\nexport const Description = styled.p`\r\n  font-size: 20px;\r\n  text-align: center;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Description } from './NotificationStyledComponent';\r\n\r\nfunction Notification({ message }) {\r\n  return <Description>{message}</Description>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n`;\r\nexport const List = styled.ul`\r\n  font-size: 20px;\r\n`;\r\nexport const ListItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport Notification from '../Notification';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { List, Title, ListItem } from './StatisticStyledComponent';\r\n\r\nexport default class Statistic extends Component {\r\n  static propTypes = {\r\n    feedbackTotal: PropTypes.number.isRequired,\r\n    feedbackPercentage: PropTypes.number.isRequired,\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      feedbackTotal,\r\n      feedbackPercentage,\r\n      good,\r\n      bad,\r\n      neutral,\r\n    } = this.props;\r\n\r\n    if (!feedbackTotal) return <Notification message=\"No feedback given\" />;\r\n    else\r\n      return (\r\n        <section>\r\n          <Title>Statistics</Title>\r\n          <List>\r\n            <ListItem>\r\n              Good: <span>{good}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Neutral: <span>{neutral}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Bad: <span>{bad}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Total: <span>{feedbackTotal}</span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Positive feedback: <span>{feedbackPercentage} %</span>\r\n            </ListItem>\r\n          </List>\r\n        </section>\r\n      );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\nimport Section from '../Section';\nimport FeedbackOption from '../FeedbackOption';\nimport Statistics from '../Statistics';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleButtonClick = event => {\n    const { name } = event.target;\n    switch (name) {\n      case 'good':\n        setGood(good => good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad => bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const TotalFeedback = good + neutral + bad;\n  const PositiveFeedbackPercentage = Math.round((good * 100) / TotalFeedback);\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOption\n        options={['good', 'neutral', 'bad']}\n        onButtonClick={handleButtonClick}\n      />\n      <Statistics\n        feedbackTotal={TotalFeedback}\n        feedbackPercentage={PositiveFeedbackPercentage}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n      />\n    </Section>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Component/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}